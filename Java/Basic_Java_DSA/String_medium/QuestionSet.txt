



Valid Parentheses
Problem Statement: Given a string of parentheses, determine if it is valid (properly nested).
Input: "()[]{}"
Expected Result: True


Group Anagrams
Problem Statement: Given an array of strings, group the anagrams together.
Input: ["eat", "tea", "tan", "ate", "nat", "bat"]
Expected Result: [["eat","tea","ate"],["tan","nat"],["bat"]]


Check if Strings are One Edit Distance Apart
Problem Statement: Check if two strings are one edit (insert, remove, or replace) away.
Input: "pale", "ple"
Expected Result: True

Implement strStr() / IndexOf()
Problem Statement: Return the index of the first occurrence of a substring in a string. If not found, return -1.
Input: "hello", "ll"
Expected Result: 2

Compress a String
Problem Statement: Implement basic string compression using the counts of repeated characters.
Input: "aabcccccaaa"
Expected Result: "a2b1c5a3"

Find All Permutations of a String
Problem Statement: Return all permutations of a given string.
Input: "abc"
Expected Result: ["abc", "acb", "bac", "bca", "cab", "cba"]

Remove Duplicates from a String
Problem Statement: Remove duplicate characters and return the modified string.
Input: "banana"
Expected Result: "ban"

Check if a String is a Valid IP Address
Problem Statement: Validate if the given string is a valid IPv4 address.
Input: "192.168.0.1"
Expected Result: True

Longest Substring Without Repeating Characters
Problem Statement: Find the length of the longest substring without repeating characters.
Input: "abcabcbb"
Expected Result: 3 (Substring: "abc")

Remove All Occurrences of a Character
Problem Statement: Remove all occurrences of a given character from the string.
Input: "hello", Character: 'l'
Expected Result: "heo"

Check if Two Strings are Isomorphic
Problem Statement: Two strings are isomorphic if every character in one string can be replaced to get the other.
Input: "egg", "add"
Expected Result: True

Convert String to Integer (atoi)
Problem Statement: Implement a function to convert a string to an integer (similar to Python's int()).
Input: "42"
Expected Result: 42

Find the Most Frequent Character
Problem Statement: Find the character that appears the most in the given string.
Input: "test"
Expected Result: 't'

Check if String is a Subsequence
Problem Statement: Determine if the second string is a subsequence of the first.
Input: "abcde", "ace"
Expected Result: True

Remove All Whitespaces from a String
Problem Statement: Remove all spaces from the given string.
Input: "a b c"
Expected Result: "abc"

Rearrange Characters to Form a Palindrome
Problem Statement: Check if characters of a given string can be rearranged to form a palindrome.
Input: "civic"
Expected Result: True

Find the First Repeated Character
Problem Statement: Find the first character that repeats in a string.
Input: "swiss"
Expected Result: 's'

Check if a String Contains a Substring Using Sliding Window
Problem Statement: Implement a sliding window technique to check if a substring exists within the given string.
Input: "abcdef", "cde"
Expected Result: True
